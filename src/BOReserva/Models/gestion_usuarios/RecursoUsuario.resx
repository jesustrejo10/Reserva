<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivoUsuario" xml:space="preserve">
    <value>activo</value>
    <comment>Estado del usuario</comment>
  </data>
  <data name="ApellidoUsuario" xml:space="preserve">
    <value>apellido</value>
    <comment>Apellido del usuario</comment>
  </data>
  <data name="ArgumentoInvalido" xml:space="preserve">
    <value>Se ha ingresado un argumento con un valor invalido</value>
    <comment>Argumento Invalido</comment>
  </data>
  <data name="BDError" xml:space="preserve">
    <value>Error de conexion con la base de datos</value>
    <comment>Error de conexión con la BD</comment>
  </data>
  <data name="CambiarStatus" xml:space="preserve">
    <value>M12_CambiarStatus</value>
    <comment>Nombre stored procedure. Cambia el status del usaurio de activo a inactivo y visceversa.</comment>
  </data>
  <data name="ConsultarEmail" xml:space="preserve">
    <value>M12_ConsultarUsuario</value>
    <comment>Recupera la información de un usuario a partir de un email</comment>
  </data>
  <data name="ConsultarID" xml:space="preserve">
    <value>M12_ConsultarUsuarioID</value>
    <comment>Recupera la información de un usuario a partir de su ID</comment>
  </data>
  <data name="ConsultarIDUltimo" xml:space="preserve">
    <value>M12_ConsultarUltimoUsuarioID</value>
    <comment>Stored Procedure para obtener el id del ultimo usuario agregado</comment>
  </data>
  <data name="ContarUsuario" xml:space="preserve">
    <value>M12_ContarUsuario</value>
    <comment>Stored Procedure Cuenta cuantos usuarios hay en la base de datos</comment>
  </data>
  <data name="CorreoUsuario" xml:space="preserve">
    <value>correo</value>
    <comment>Correo del usuario</comment>
  </data>
  <data name="CrearUsuario" xml:space="preserve">
    <value>M12_CrearUsuario</value>
    <comment>Stored Procedure para crear un usuario</comment>
  </data>
  <data name="EliminarUsuario" xml:space="preserve">
    <value>M12_EliminarUsuario</value>
    <comment>Elimina un usuario a partir de su ID</comment>
  </data>
  <data name="Error_Activo" xml:space="preserve">
    <value>Error: Debe existir al menos un usuario Administrador Activo</value>
    <comment>Error que se muestra al intentar cambiar el status o eliminar un usuario</comment>
  </data>
  <data name="Error_Conflicto_FK" xml:space="preserve">
    <value>Error: El usuario no se puede eliminar ya que tiene registros asociados</value>
    <comment>Mensaje de conflicto de FK con alguna entidad relacionada con la tabla usuario</comment>
  </data>
  <data name="Error_Email_Existe" xml:space="preserve">
    <value>Error: el correo introducido ya se encuentra registrado</value>
    <comment>Error de constraint unico del email</comment>
  </data>
  <data name="ExceptionM12" xml:space="preserve">
    <value>Reserva_M12</value>
    <comment>Código de Exception arrojado por el módulo 12</comment>
  </data>
  <data name="FechaUsuario" xml:space="preserve">
    <value>fecha</value>
    <comment>Fecha de creación del usuario</comment>
  </data>
  <data name="FormatoInvalido" xml:space="preserve">
    <value>Se ha ingresado datos con un formato invalido</value>
    <comment>Formato Invalido</comment>
  </data>
  <data name="IDUsuario" xml:space="preserve">
    <value>usuID</value>
    <comment>Usuario ID</comment>
  </data>
  <data name="ListarRoles" xml:space="preserve">
    <value>M12_ListarRoles</value>
    <comment>Procedure que devuelve la lista de todos los roles del BO</comment>
  </data>
  <data name="ListarUsuarios" xml:space="preserve">
    <value>M12_ListarUsuarios</value>
    <comment>Stored Procedure para listar todos los usuarios del BO</comment>
  </data>
  <data name="MensajeAgregado" xml:space="preserve">
    <value>Usuario Agregado Exitosamente</value>
    <comment>Mensaje cuando se agrega exitosamente un usuario</comment>
  </data>
  <data name="MensajeEliminado" xml:space="preserve">
    <value>Usuario Eliminado Exitosamente</value>
    <comment>Mensaje que se muestra al eliminar un usuario</comment>
  </data>
  <data name="MensajeModificado" xml:space="preserve">
    <value>Usuario Modficado Exitosamente</value>
    <comment>Mensaje cuando se modifica exitosamente un usuario</comment>
  </data>
  <data name="MensajeStatus" xml:space="preserve">
    <value>Status Cambiado Exitosamente</value>
    <comment>Mensaje que se muestra al cambiar un status</comment>
  </data>
  <data name="ModificarUsuario" xml:space="preserve">
    <value>M12_ModificarUsuario</value>
    <comment>Stored Procedure para modificar un usuario.</comment>
  </data>
  <data name="NombreUsuario" xml:space="preserve">
    <value>nombre</value>
    <comment>Nombre del usuario</comment>
  </data>
  <data name="NumUsuario" xml:space="preserve">
    <value>usunum</value>
    <comment>Numero de Usuarios</comment>
  </data>
  <data name="OtroError" xml:space="preserve">
    <value>Error al momento de realizar la operacion</value>
    <comment>Error general</comment>
  </data>
  <data name="ParametroActivo" xml:space="preserve">
    <value>@activo</value>
    <comment>Parametro que representa el estado actual del usuario</comment>
  </data>
  <data name="ParametroApellido" xml:space="preserve">
    <value>@apellido</value>
    <comment>Parametro que representa el apellido del usuario</comment>
  </data>
  <data name="ParametroContraseña" xml:space="preserve">
    <value>@contraseña</value>
    <comment>Parametro que representa la contraseña del usuario</comment>
  </data>
  <data name="ParametroCorreo" xml:space="preserve">
    <value>@correo</value>
    <comment>Parametro que representa el correo del usuario</comment>
  </data>
  <data name="ParametroFecha" xml:space="preserve">
    <value>@fecha</value>
    <comment>Parametro que representa la fecha de creacion del usuario</comment>
  </data>
  <data name="ParametroID" xml:space="preserve">
    <value>@id</value>
    <comment>Parametro que representa el ID del usuario</comment>
  </data>
  <data name="ParametroNombre" xml:space="preserve">
    <value>@nombre</value>
    <comment>Parametro que representa el nombre del usuario</comment>
  </data>
  <data name="ParametroRolID" xml:space="preserve">
    <value>@rol</value>
    <comment>Parametro que representa el id del rol del usuario</comment>
  </data>
  <data name="RolIDUsuario" xml:space="preserve">
    <value>rolID</value>
    <comment>Rol ID del usuario</comment>
  </data>
  <data name="RolUsuario" xml:space="preserve">
    <value>rol</value>
    <comment>Nombre del rol del usuario</comment>
  </data>
</root>